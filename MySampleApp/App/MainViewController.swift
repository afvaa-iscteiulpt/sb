//
//  MainViewController.swift
//  MySampleApp
//
//
// Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.13
//

import UIKit
import AWSMobileHubHelper

class MainViewController: UITableViewController {
    
    var demoFeatures: [DemoFeature] = []
 
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        //if a new user show tutorial
        let launchedBefore = UserDefaults.standard.bool(forKey: "launchedBefore")
        if (!launchedBefore)  {
            UserDefaults.standard.set(true, forKey: "launchedBefore")
            
            let storyboard = UIStoryboard(name: "AppTutorial", bundle: nil)
            let viewController2 = storyboard.instantiateViewController(withIdentifier: "AppTutorial") as! AppTutorialViewController
            viewController2.from = "new"
            self.present(viewController2, animated: false, completion: nil)
        }
        
        self.setupLoginAccountSettingsItem()
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        navigationItem.backBarButtonItem = UIBarButtonItem(title: "Back", style: .plain, target: nil, action: nil)
        
        // Default theme settings.
        navigationController!.navigationBar.backgroundColor = UIColor(red: 1.0, green: 1.0, blue: 1.0, alpha: 1.0)
        navigationController!.navigationBar.barTintColor = UIColor(red: 0xF5/255.0, green: 0x85/255.0, blue: 0x35/255.0, alpha: 1.0)
        navigationController!.navigationBar.tintColor = UIColor.white

        var demoFeature = DemoFeature.init(
            name: NSLocalizedString("Cloud Logic",
                comment: "Label for demo menu option."),
            detail: NSLocalizedString("Run business logic in the cloud without managing servers. Integrate functionality with your app using APIs.",
                comment: "Description for demo menu option."),
            icon: "CloudLogicAPIIcon", storyboard: "CloudLogicAPI", type: "aws", from: "")
        
        demoFeatures.append(demoFeature)
        
        //@Andre
        demoFeature = DemoFeature.init(
            name: NSLocalizedString("Tutorial beggin",
                                    comment: "Label for tutorial view"),
            detail: NSLocalizedString("See the app tutorial for new users",
                                      comment: "Tutorial app."),
            icon: "UserIcon", storyboard: "AppTutorial", type: "spiderbacon", from: "new")
        
        demoFeatures.append(demoFeature)
        
        demoFeature = DemoFeature.init(
            name: NSLocalizedString("Tutorial inside app",
                                    comment: "Label for tutorial view"),
            detail: NSLocalizedString("See the app tutorial for current users",
                                      comment: "Tutorial app."),
            icon: "UserIcon", storyboard: "AppTutorial", type: "spiderbacon", from: "inside")
        
        demoFeatures.append(demoFeature)
        
        demoFeature = DemoFeature.init(
            name: NSLocalizedString("Filters",
                                    comment: "Events filters"),
            detail: NSLocalizedString("See the app filters",
                                      comment: "Filters."),
            icon: "UserIcon", storyboard: "Filters", type: "spiderbacon", from: "")
        
        demoFeatures.append(demoFeature)
        
        demoFeature = DemoFeature.init(
            name: NSLocalizedString("Event details",
                                    comment: "Events details"),
            detail: NSLocalizedString("See the app event details",
                                      comment: "Events Details."),
            icon: "UserIcon", storyboard: "EventDetails", type: "spiderbacon", from: "")
        
        demoFeatures.append(demoFeature)
        
        /*
        demoFeature = DemoFeature.init(
            name: NSLocalizedString("Map details",
                                    comment: "Map event details"),
            detail: NSLocalizedString("See the map event details",
                                      comment: "Map event Details."),
            icon: "UserIcon", storyboard: "Map", type: "spiderbacon", from: "")
        
        demoFeatures.append(demoFeature)
        */
        
        self.setupLoginAccountSettingsItem()
    
    }

    func setupLoginAccountSettingsItem() {
        
        var demoFeature: DemoFeature
        
        for (key, df) in demoFeatures.enumerated() {
            if(df.storyboard == "AccountSettings" || df.storyboard == "SignIn") {
                demoFeatures.remove(at: key)
            }
        }
        
        
        if (AWSSignInManager.sharedInstance().isLoggedIn) {
            //account settings
            demoFeature = DemoFeature.init(
                name: NSLocalizedString("Account settings",
                                        comment: "Label for account settings view"),
                detail: NSLocalizedString("User account settings",
                                          comment: "Tutorial app."),
                icon: "UserIcon", storyboard: "AccountSettings", type: "spiderbacon", from: "")
            
            demoFeatures.append(demoFeature)
        }
        if !(AWSSignInManager.sharedInstance().isLoggedIn) {
            demoFeature = DemoFeature.init(
                name: NSLocalizedString("Sign in",
                                        comment: "Label for sign in view"),
                detail: NSLocalizedString("Sign in to app",
                                          comment: "Sign in."),
                icon: "UserIcon", storyboard: "SignIn", type: "spiderbacon", from: "")
            
            demoFeatures.append(demoFeature)
        }
        
        DispatchQueue.main.async{
            self.tableView.reloadData()
        }
        
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "MainViewCell")!
        let demoFeature = demoFeatures[indexPath.row]
        cell.imageView!.image = UIImage(named: demoFeature.icon)
        cell.textLabel!.text = demoFeature.displayName
        cell.detailTextLabel!.text = demoFeature.detailText
        return cell
    }
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return demoFeatures.count
    }
    
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        tableView.deselectRow(at: indexPath, animated: true)
        let demoFeature = demoFeatures[indexPath.row]
        let storyboard = UIStoryboard(name: demoFeature.storyboard, bundle: nil)
        
        let viewController = storyboard.instantiateViewController(withIdentifier: demoFeature.storyboard)
        
        if(demoFeature.storyboard == "AppTutorial") {
            let viewController2 = storyboard.instantiateViewController(withIdentifier: demoFeature.storyboard) as! AppTutorialViewController
            viewController2.from = demoFeature.from
            self.present(viewController2, animated: true, completion: nil)
            return
        }
        
        if(demoFeature.storyboard == "SignIn") {
            let viewController2 = storyboard.instantiateViewController(withIdentifier: demoFeature.storyboard) as! SignInViewController
            viewController2.tutorial = false
            self.present(viewController2, animated: true, completion: nil)
            return
        }
        
        if(demoFeature.type == "spiderbacon") {
            self.present(viewController, animated: true, completion: nil)
        } else {
            self.navigationController!.pushViewController(viewController, animated: true)
        }
    }
}
